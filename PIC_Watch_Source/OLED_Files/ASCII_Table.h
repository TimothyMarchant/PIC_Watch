/*
 * This file holds the ASCII table with all the required dot patterns.
 */
//struct definition for character dot patterns.
//The OLED draws bytes of data vertically so we only actually need 5 bytes per character.
/*The dot pattern is structered as follows
    0 1 2 3 4 Line number
 b0 
 b1
 b2
 b3
 b4
 b5
 b6
 b7
 * Example consider 'T'
    0 1 2 3 4 Line number
 b0 * * * * *
 b1     *
 b2     *
 b3     *
 b4     *
 b5     *
 b6     *
 b7     
 * in this example each * represents a 1 and a blank is a zero.
 * so Line0 would be 0x01 Line1 is 0x01, Line2 is 0x7F, Line 3 is 0x01 and Line 4 is 0x01
 * For all the patterns I made I left b7 blank.  As it turns out anything in b7 can connect to something in b0 on the next line on the OLED.
 */
typedef struct CharacterLines{
    unsigned char Line0;
    unsigned char Line1;
    unsigned char Line2;
    unsigned char Line3;
    unsigned char Line4;
}CharLines;
#define CharacterLength 8
//these all refer to the ASCII values.  This table holds the dot pattern (the struct defined above).
//we only need 93 characters of the ASCII table.  The ones that were excluded are not actual letters/symbols.
const CharLines ASCII_Table[94]={
    {0x0,0x0,0x4F,0x0,0x0}, //ASCII 33 !
    {0x03,0x03,0x00,0x03,0x03}, //34 "
    {0x14,0x7F,0x14,0x7F,0x14}, //35 #
    {0x26,0x49,0x7F,0x51,0x22}, //36 $ need to fix
    {0x26,0x19,0x3E,0x4C,0x32}, //37 %
    {0x22,0x55,0x49,0x51,0x30}, //38 &
    {0x03,0x03,0x00,0x00,0x00}, //39 '
    {0x7E,0x81,0x0,0x0,0x0}, //40 ( change to hex
    {0x81,0x7E,0x0,0x0,0x0}, //41 ) change to hex
    {0x8,0x1C,0x3E,0x1C,0x8}, //42 *
    {0x8,0x8,0x3E,0x8,0x8}, //43 +
    {0x30,0x20,0x00,0x00,0x00}, //44 ,
    {0x8,0x8,0x8,0x8,0x8}, //45 -
    {0x80,0x0,0x0,0x0,0x0}, //46 .
    {0x20,0x10,0x8,0x4,0x2}, //47 / (slash)
    {0x3E,0x51,0x49,0x45,0x3E}, //48 0
    {0x44,0x42,0x7F,0x40,0x40}, //49 1
    {0x62,0x51,0x49,0x45,0x42}, //50 2
    {0x22,0x41,0x49,0x49,0x36}, //51 3
    {0xC,0xA,0x7F,0x8,0x0}, //52 4
    {0x27,0x49,0x49,0x49,0x31}, //53 5
    {0x3C,0x4A,0x49,0x49,0x31}, //54 6
    {0x21,0x11,0x9,0x5,0x3}, //55 7
    {0x36,0x49,0x49,0x49,0x36}, //56 8
    {0x6,0x49,0x49,0x49,0x3E}, //57 9
    {0x0,0x0,0x14,0x0,0x0}, //58 :
    {0x0,0x20,0x34,0x0,0x0}, //59 ;
    {0x0,0x8,0x14,0x22,0x0}, //60 <
    {0x14,0x14,0x14,0x14,0x14}, //61 =
    {0x0,0x22,0x14,0x8,0x0}, //62 >
    {0x2,0x1,0x51,0x9,0x6}, //63 ?
    {0x3E,0x49,0x55,0x4E,0x0}, //64 @
    {0x78,0x14,0x12,0x14,0x78}, //65 A
    {0x7F,0x49,0x49,0x49,0x36}, //66 B
    {0x3E,0x41,0x41,0x41,0x22}, //67 C
    {0x7F,0x41,0x41,0x41,0x3E}, //68 D
    {0x7F,0x49,0x49,0x41,0x41}, //69 E
    {0x7F,0x9,0x9,0x1,0x1}, //70 F
    {0x3E,0x41,0x51,0x51,0x22}, //71 G
    {0x7F,0x8,0x8,0x8,0x7F}, //72 H
    {0x41,0x41,0x7F,0x41,0x41}, //73 I
    {0x21,0x41,0x3F,0x1,0x1}, //74 J
    {0x7F,0x8,0x14,0x22,0x41}, //75 K
    {0x7F,0x40,0x40,0x40,0x40}, //76 L
    {0x7F,0x2,0x4,0x2,0x7F}, //77 M
    {0x7F,0x6,0x18,0x20,0x7F}, //78 N
    {0x3E,0x41,0x41,0x41,0x3E}, //79 O
    {0x7F,0x9,0x9,0x6,0x0}, //80 P
    {0x3E,0x41,0x51,0x61,0x7E}, //81 Q
    {0x7F,0x9,0x19,0x29,0x46}, //82 R
    {0x26,0x49,0x49,0x51,0x22}, //83 S
    {0x1,0x1,0x7F,0x1,0x1}, //84 T
    {0x3F,0x40,0x40,0x40,0x3F}, //85 U
    {0x1F,0x38,0x60,0x38,0x1F}, //86 V
    {0x7F,0x20,0x10,0x20,0x7F}, //87 W
    {0x41,0x36,0x8,0x36,0x41}, //88 X
    {0x3,0x4,0x78,0x4,0x3}, //89 Y
    {0xC1,0xA1,0x91,0x89,0x87}, //90 Z
    {0x7F,0x41,0x41,0x0,0x0}, //91 [
    {0x2,0x4,0x8,0x10,0x20}, //92 '\'
    {0x41,0x41,0x7F,0x0,0x0}, //93 ]
    {0x4,0x2,0x1,0x2,0x4}, //94 ^
    {0x40,0x40,0x40,0x40,0x40}, //95 _
    {0x3,0x2,0x0,0x0,0x0}, //96 `
    {0x30,0x4A,0x4A,0x3C,0x60}, //97 a
    {0x7E,0x50,0x50,0x20,0x0}, //98 b
    {0x38,0x44,0x44,0x0,0x0}, //99 c
    {0x20,0x50,0x50,0x7E,0x0}, //100 d
    {0x38,0x54,0x54,0x54,0x8}, //101 e
    {0x10,0x7C,0x12,0x2,0x0}, //102 f
    {0x4,0x2A,0x4A,0x3E,0x0}, //103 g
    {0x7E,0x8,0x8,0x70,0x0}, //104 h
    {0x0,0x0,0x7A,0x0,0x0}, //105 i
    {0x20,0x40,0x7A,0x0,0x0}, //106 j
    {0x7E,0x18,0x24,0x40,0x0}, //107 k
    {0x0,0x0,0x7E,0x0,0x0}, //108 l
    {0x7C,0x6,0x78,0x6,0x7C}, //109 m
    {0x78,0x4,0x4,0x4,0x78}, //110 n
    {0x38,0x44,0x44,0x44,0x38}, //111 o
    {0x7C,0x12,0x12,0xC,0x0}, //112 p
    {0xC,0x12,0x12,0x7C,0x0}, //113 q
    {0x7C,0x2,0x2,0x4,0x0}, //114 r
    {0x24,0x4A,0x52,0x24,0x0}, //115 s
    {0x8,0x8,0x7E,0x48,0x48}, //116 t
    {0x38,0x40,0x40,0x40,0x38}, //117 u
    {0x8,0x30,0x40,0x30,0x8}, //118 v
    {0x18,0x60,0x30,0x60,0x18}, //119 w
    {0x44,0x28,0x10,0x28,0x44}, //120 x
    {0x42,0x24,0x18,0x4,0x2}, //121 y
    {0x44,0x64,0x54,0x4C,0x44}, //122 z
    {0x8,0x3E,0x41,0x0,0x0}, //123 {
    {0x0,0x0,0x7F,0x0,0x0}, //124 |
    {0x41,0x3E,0x8,0x0,0x0}, //125 }
    {0x10,0x8,0x10,0x8,0x0}, //126 ~
};